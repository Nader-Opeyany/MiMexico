@*@model MiMexicoWeb.Models.ViewModel.ItemViewModel*@
@model IEnumerable<MiMexicoWeb.Models.Item>


@{
   
}
@*<h1>@ViewData["Title"]</h1>*@

@*SMS Message Test*@
<a asp-controller="Order" asp-area="Customer" asp-action="SMSMessage" class="btn btn-secondary" style="width:150px">
        Send
</a>

<a asp-area="Customer" asp-controller="Cart" asp-action="Index" style=" 
    right: 100px"
class="btn btn-primary">Checkout</a>

<div class="bg-black bg-opacity-50 p-2" style="border-radius:50px;">
<h3 class="display-2 text-white" style="text-align:center;">Food</h3>
<div class="container">
    <div class="d-flex flex-row flex-wrap justify-content-center">
    @{
        Item[] itemArray = new Item[100];
        int iterator = 0;
        bool duplicateName = false;

        @foreach (var item in Model)
        {
            if (item.Beverage == false)
            {
                while (itemArray[iterator] != null)
                {
                    if (item.name == itemArray[iterator].name)
                    {
                        duplicateName = true;
                    }
                    iterator++;
                }
                if (duplicateName == false)
                {

                        <div class="p-2" >
                        
                        <div style="
                                background: tan;
                                border-radius: 25px;
                                width: 250px;
                                height: 200px;
                        ">
                            @*Item card image*@
                            <div>
                                <img src="@item.ImageUrl" 
                                 style="width: 250px; height: 100px; border-top-left-radius: 25px; border-top-right-radius: 25px" >
                            </div>


                            @*Item card details*@
                            <div class="row" style="padding-inline: 20px;">
                                <div class="container my-md-2">
                                    <div class="d-flex justify-content-between">
                                        <b style="font-size: 24px;">@item.name</b>
                                        <p><b>$@item.price.ToString("0.00")</b></p>
                                    </div>
                                </div>

                                <br />


                                <a class="btn btn-primary" style="                                            border: none;
                                                border-radius: 20px;
                                                background-color: #9A3A3A;
                                                color: white;
                                                padding-inline: 10px;" asp-action="AddItem" class="btn btn-primary form-control" asp-route-itemId="@item.id">
                                    Add Item
                                </a>

                            </div>
                        </div>
                        </div>

                    
                    for (iterator = 0; iterator < 100; iterator++)
                    {
                        if (itemArray[iterator] == null)
                        {
                            itemArray[iterator] = item;
                            iterator = 0;
                            break;
                        }
                    }
                }
                else
                {
                    iterator = 0;
                }
                duplicateName = false;
            }
        }
       }
    </div>
</div>
</div>
<div class="bg-black bg-opacity-50 p-2" style="border-radius:50px;">
<h3 class="display-2 text-white" style="text-align:center;">Drinks</h3>
<div class="container">
    <div class="d-flex flex-row flex-wrap justify-content-center">
    @{
        itemArray = new Item[100];
        iterator = 0;
        duplicateName = false;

        @foreach (var item in Model)
        {
            if (item.Beverage == true)
            {
                while (itemArray[iterator] != null)
                {
                    if (item.name == itemArray[iterator].name)
                    {
                        duplicateName = true;
                    }
                    iterator++;
                }
                if (duplicateName == false)
                {
                    <div class="p-2">
                        <div style="
                                    background: tan;
                                    border-radius: 25px;
                                    width: 250px;
                                    height: 200px;
                            ">
                            @*Item card image*@
                            <div>
                                <img src="@item.ImageUrl" 
                                 style="width: 250px; height: 100px; border-top-left-radius: 25px; border-top-right-radius: 25px" >
                            </div>

                            @*Item card details*@
                            <div class="row" style="padding-inline: 20px;">
                                <div class="container my-md-2">
                                    <div class="d-flex justify-content-between">
                                        <b style="font-size: 24px;">@item.name</b>
                                        <p><b>$@item.price.ToString("0.00")</b></p>
                                    </div>
                                </div>

                                <br />

                                @*Add item to cart*@
                                <a class="btn btn-primary" style="                                            border: none;
                                                border-radius: 20px;
                                                background-color: #9A3A3A;
                                                color: white;
                                                padding-inline: 10px;" asp-action="AddItem" class="btn btn-primary form-control" asp-route-itemId="@item.id">
                                    Add Item
                                </a>

                            </div>
                        </div>
                    </div>
                    for (iterator = 0; iterator < 100; iterator++)
                    {
                        if (itemArray[iterator] == null)
                        {
                            itemArray[iterator] = item;
                            iterator = 0;
                            break;
                        }
                    }
                }
                else
                {
                    iterator = 0;
                }
                duplicateName = false;
            }
        }
    }
</div>
</div>
</div>



@*Scripts*@
<div class="m-4">
    <script>
        function changeQuantity(id, increment) {
            if (increment) {
                document.getElementById(id).value++;
            }
            if (!increment) {
                document.getElementById(id).value--;
                if (document.getElementById(id).value <= 0) {
                    document.getElementById(id).value = 0;
                }
            }
            console.log(document.getElementById(id).value);
        }
    </script>
    <script>
        function storeOrder(storeId, quantityId, orderString) {
            //Adds order item to order value if it's empty
            if (document.getElementById(storeId).value == "" && document.getElementById(quantityId).value != 0) {
                document.getElementById(storeId).value += document.getElementById(quantityId).value.toString() + " " + orderString.toString() + ",";
            }
            else if (document.getElementById(storeId).value != "") {
                //splits the current order value by commas and sets what the new incoming order item is
                let orderArray = document.getElementById(storeId).value.split(",");
                let newOrderItem = document.getElementById(quantityId).value.toString() + " " + orderString.toString();

                //Checks to see if the new order item has already been ordered and adjusts the quantity
                //of the ordered item
                for (let i = 0; i < orderArray.length; i++) {
                    let tempOrderArray = orderArray[i].split(" ");
                    console.log(orderArray[orderArray.length] + ":Last order item in array");
                    let tempOrder = newOrderItem.split(" ");
                    if (tempOrder[1] == tempOrderArray[1]) {
                        if (document.getElementById(quantityId).value <= 0) {
                            for (let j = i; j < orderArray.length; j++) {
                                orderArray[j] = orderArray[j + 1];
                            }
                            document.getElementById(storeId).value = orderArray.join(",").slice(0, -1);
                            return;
                        }
                        tempOrderArray[0] = tempOrder[0];
                        orderArray[i] = tempOrderArray.join(" ");
                        document.getElementById(storeId).value = orderArray.join(",");
                        return;
                    }
                }
                //The new order item wasn't previously ordered so we add it to the order list here!
                if (document.getElementById(quantityId).value <= 0) {
                    console.log("Cannot Add Zero Of An Item");
                    return;
                }
                else {
                    document.getElementById(storeId).value += document.getElementById(quantityId).value.toString() + " " + orderString.toString() + ",";
                    return;
                }
            }
        }
    </script>
    <script>
        function displayOrder(orderId, orderSummary) {
            document.getElementById(orderSummary).value = document.getElementById(orderId).value.toString();
            return;

        }
    </script>
</div>

